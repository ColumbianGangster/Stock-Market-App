plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id "de.mannodermaus.android-junit5" version "1.8.2.1"
}
apply plugin: 'kotlin-android'

android {
    namespace 'com.dowpro.feature_sentiments'
    compileSdk 34

    defaultConfig {
        testInstrumentationRunnerArguments runnerBuilder: 'de.mannodermaus.junit5.AndroidJUnit5Builder'
        minSdk 23
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig true
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(path: ':library_network')
    implementation project(path: ':library_design_system')
    implementation project(path: ':library_core')
    implementation project(path: ':library_core_utils')

    testImplementation project(path: ':library_core_testing')

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.8.2"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.3.0"

    def multidex_version = "2.0.1"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.multidex:multidex:$multidex_version"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'

    // viewModel
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-rc01'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0-rc01'

    // fragments
    implementation "androidx.fragment:fragment-ktx:$fragments_version"

    // dagger
    implementation 'com.google.dagger:hilt-android:2.44.2'
    kapt 'com.google.dagger:hilt-compiler:2.44.2'
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.44.2'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.44.2'
    testImplementation 'com.google.dagger:hilt-android-testing:2.44.2'
    kaptTest 'com.google.dagger:hilt-compiler:2.44.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

}


kapt {
    correctErrorTypes true
}

hilt {
    enableAggregatingTask = true
}