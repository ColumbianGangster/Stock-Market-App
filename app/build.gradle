plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // kotlin-parcelize
    // osslicences plugin
    // version matcher plugin
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
}

apply from: 'dependencies.gradle'
apply from: 'brands.gradle'

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.dowpro.marketapp"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true
        manifestPlaceholders.put("deeplinkUrl", "dowpro.market.com")
    }

    buildTypes {
        debug {

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // App Bundle Support
    bundle {
        density {
            enableSplit true
        }
        abi {
            enableSplit true
        }
        language {
            enableSplit true
        }
    }

    flavorDimensions "brand"
    productFlavors {
        red {
            dimension "brand"
            applicationId "com.dowpro.marketapp.red"
            buildConfigField "String", "APP_NAME", '"Red"'
            manifestPlaceholders.brandName = 'red'
        }

        blue {
            dimension "brand"
            applicationId "com.dowpro.marketapp.blue"
            buildConfigField "String", "APP_NAME", '"Blue"'
            manifestPlaceholders.brandName = 'blue'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        // https://stackoverflow.com/questions/68045875/for-what-purpose-is-useir-used
        // useIR removed in kotlin gradle plugin 1.7
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            pickFirst 'META-INF/*'
        }
    }
    namespace 'com.dowpro.marketapp'
}

kapt {
    correctErrorTypes true
}
/*
The Hilt Gradle plugin offers an option for performing Hiltâ€™s classpath aggregation in a dedicated Gradle task.
This allows the Hilt annotation processors to be isolating so they are only invoked when necessary.
This reduces incremental compilation times by reducing how often an incremental change causes a rebuild of the Dagger components.
 Enabling this option also enables sharing test components and classpath aggregation.
 Note that this option replaces enableExperimentalClasspathAggregation since it has the same benefits without any of its caveats.
 */
hilt {
    enableAggregatingTask = true
}